===Часть 5\6 ====

function Ue(y) {
              let x = $(y).prev();
              for (;;) {
                let T = x.text();
                if (
                  T.match(/\[.+?\]/g)?.length > 1 &&
                  !T.match(/змея|Тесла|дракон|Ночной страж/)
                )
                  break;
                x = x.prev();
              }
              return x;
            }
            let Wt = $("#fightGroupForm").find(".fight-log");
            for (let y in z) {
              let { fstr: x, cnt: T, pn: _, turns: S } = z[y];
              x &&
                Wt.find(x).each(function () {
                  let h = q(this, _, y);
                  h || (h = q(this, _ === "l" ? "f" : "l", y)),
                    h &&
                      M(
                        h[1],
                        y,
                        l,
                        S ||
                          $(this)
                            .text()
                            .match(/\s(\d)\s/)[1],
                        w || ""
                      );
                });
            }
            Wt.find('.text:contains("\u0411\u0430\u0439\u043A ")').each(
              function () {
                let y = $(this)
                  .text()
                  .match(/Байк\s.+?оглушает.+?\[.+?\]/g);
                y &&
                  y.forEach((x) => {
                    let T = x.match(/оглушает\s(.+?\[.+?\])/)[1],
                      _ = T === b ? `<small>${x}</small>` : "";
                    M(T, "Bike", l, "1", _);
                  });
              }
            ),
              (p.fightLog = JSON.stringify(d));
          },
          a = function (c) {
            document.getElementById("sign_kick") == null &&
              (document.getElementById("useabl-" + c).click(),
              t.f_autokick &&
                ($("#fightAction").find("button").click(),
                $("#useabl-" + c)
                  .parents("label")
                  .find("img")
                  .attr("style", "filter:contrast(2.0)"),
                $("#f_autokick").prop("checked", !1),
                (t.f_autokick = 0),
                (window.localStorage.OptionsVar = JSON.stringify(t))),
              $(".log-panel").attr("id", "sign_kick"));
          },
          s = function () {
            if ($("#sign_ufl").length != 1) {
              if (
                (r(),
                o(),
                $(".fight-log")
                  .find(
                    '[class*="icon"]:not(.icon-bang-poison):not(.icon-antigranata2):not(.question-icon):not(.icon-rocket-1):not(.icon-rocket-2):not(.icon-cheese):not(.icon-helmet):not(.icon-bear):not(.icon-antigranata):not(.icon-forcejoin):not(.icon-heal):not(.antimrr):not(.serial):not(.icon-bang):not(.icon-superhit):not(.icon-reflect):not(.icon-chance):not(.icon-dodge):not(.icon-secondhit):not(.icon-thirdhit):not(.icon-katyusha):not(.icon-weakening-after-madness):not(.icon-foggranade)'
                  )
                  .each(function () {
                    var M = $(this)
                      .next()
                      .text()
                      .match(/(.*).\[/);
                    if (M !== null) {
                      var q = $(".group")
                        .find('li .user:contains("' + M[1] + '")')
                        .first();
                      $(q).is(".fight-log")
                        ? $(q).children("br").first().before($(this).clone())
                        : $(q)
                            .addClass("fight-log")
                            .prepend("<br>")
                            .prepend($(this).clone());
                    }
                  }),
                t.f_topmylog)
              ) {
                var c = $("ul.fight-log").find(".text");
                $('<div style="border:blue 1px solid;"></div>')
                  .prepend(c.find("p.attack_i, p.attack_me").clone())
                  .prependTo(c);
              }
              if (!$(".group2 i").is(".npc")) {
                var l = $(".list-users--right"),
                  p = l.find("li.alive");
                t.f_topmig &&
                  l
                    .prepend(
                      p.filter(
                        ':contains("\u041C\u0438\u0433\u0440\u0430\u043D\u0442 ")'
                      )
                    )
                    .prepend(
                      p.filter(':contains("\u041C\u0435\u0441\u044C\u0435 ")')
                    ),
                  t.f_topmadness && l.prepend(p.has(".deaf")),
                  t.f_bottomomon &&
                    (l.find("li.dead").length == 0
                      ? l.append(
                          p.filter(
                            ':contains("\u041E\u043C\u043E\u043D\u043E\u0432\u0435\u0446 ")'
                          )
                        )
                      : l
                          .find("li.dead")
                          .first()
                          .before(
                            p.filter(
                              ':contains("\u041E\u043C\u043E\u043D\u043E\u0432\u0435\u0446 ")'
                            )
                          ));
              }
              
	// ==== Кнопки ускорения боя и фильтрация логов в боях ======

var d = $("#fightGroupForm"),
                g = $("#fightAction"),
                u = d.find(".pagescroll").clone();
              if (!$(".block-rounded .cleanup-logs-btn").length) {
	// ==== Кусок для фильтрации логов в боях =====
                  
					  let isCleanupActive = true; // Фильтрация включена по умолчанию
					let originalLogs = null; // Храним копию исходных логов

		var w = k({
			text: "\u{1F9F9} \u{1F9FD}", // Эмодзи метлы и губки
			onClick: function() {
			isCleanupActive = !isCleanupActive;
			if (isCleanupActive) {
				originalLogs = $(".log > ul.fight-log .text").clone(true);
				try {
					Ae(); // Фильтруем логи
					$(w).addClass("active");
				} catch (e) {
					console.error("Error in Ae():", e);
				}
			} else {
				if (originalLogs) {
					let e = $(".log > ul.fight-log .text");
					e.empty();
					e.append(originalLogs.clone(true));
					$(".me-logs, .ability-log-container").remove();
				}
				$(w).removeClass("active");
			}
		},
		title: "\u041F\u043E\u0447\u0438\u0441\u0442\u044C \u043B\u043E\u0433\u0438 \u043E\u0442 \u041D\u041F\u0421",
	});
	$(w).addClass("cleanup-logs-btn").css({ margin: "2px 6px" });
	if (isCleanupActive) {
		originalLogs = $(".log > ul.fight-log .text").clone(true);
		try {
			Ae(); // Инициализируем фильтрацию
			$(w).addClass("active");
		} catch (e) {
			console.error("Error in Ae() on init:", e);
		}
	}

	// Наблюдатель за обновлением логов
	const target = document.querySelector(".log > ul.fight-log .text");
	if (target) {
		const observer = new MutationObserver(() => {
			if (isCleanupActive) {
				originalLogs = $(".log > ul.fight-log .text").clone(true);
				try {
					Ae();
				} catch (e) {
					console.error("Error in Ae() during logs update:", e);
				}
			}
		});
		observer.observe(target, { childList: true, subtree: true });
	} else {
		console.warn("Logs container (.log > ul.fight-log .text) not found!");
	}
             //  ===== Кусок для автобоя наверное =====
					var b = k({
					  text: "\u23E9",
					  onClick: async () => await G(),
					  title:
						"\u041F\u0440\u043E\u043F\u0443\u0441\u0442\u0438\u0442\u044C \u041D\u041F\u0421 \u0431\u043E\u0439",
					});
					$(b).addClass("skip-npc-fight-btn").css({ margin: "2px 6px" }),
					  u.children().first().append(w),
					  u.children().first().append(b);
				  }
				  
		// ==== Конец кнопок автобой и фильтр логов ======		  
				  
              d.prepend(u),
                $(".superhit-wrapper").length !== 0 &&
                  $(".superhit-wrapper").css("zoom", "0.8"),
                g.append(
                  '<i id="fight-action-reload" class="icon reload-icon" title="\u0418\u0437\u043C\u0435\u043D\u0438\u0442\u044C \u0445\u043E\u0434"></i>'
                ),
                $("#fight-action-reload").on("click", function () {
                  g
                    .show()
                    .find("button")
                    .show()
                    .removeClass("disabled")
                    .prop("disabled", !1),
                    g.find(".waiting").hide();
                }),
                $("#main")
                  .find("span.boj")
                  .on("click", function () {
                    AngryAjax.goToUrl(
                      location.pathname.replace(/(\/fight\/\d+?\/)\d+?\//, "$1")
                    );
                  }),
                d.find("table").attr("id", "sign_ufl");
            }
          };
        var e = ["148", "-1", "-65", "59", "155", "146"];
        if (
          !$(".group2 i").is(".npc") &&
          ($(".group1 i").is(".arrived") ||
            $(".group1 img").is('[class^="team-"]')) &&
          !$("h3").is(".welcome-groupfight-flag") &&
          $("#fightGroupForm").find("ul.fight-log > li > h4").text() ==
            "\u041D\u0430\u0447\u0430\u043B\u043E" &&
          $("#fightAction").find("button").is(":visible")
        ) {
          switch (t.f_pickabil) {
            case "u":
              document.getElementById("useabl--1") !== null && a("-1"),
                document.getElementById("useabl--65") !== null && a("-65"),
                document.getElementById("useabl-148") !== null && a("148");
              break;
            case "o":
              document.getElementById("useabl-59") !== null && a("59"),
                document.getElementById("useabl-146") !== null && a("146");
              break;
            case "a":
              document.getElementById("useabl-155") !== null && a("155");
              break;
          }
          if (document.getElementById("sign_kick") == null) {
            for (var n = 0; n < e.length; n++)
              if (document.getElementById("useabl-" + e[n]) !== null) {
                a(e[n]);
                break;
              }
          }
        }
        s(), $(".log-panel").prepend($(".fight-slots-actions"));
      }
    }
    async function Ct() {
      return new Promise((t) => {
        AngryAjax.goToUrl("/alley/"),
          $(document).one("ajaxStop", () => {
            let e = location.pathname;
            t(/\/fight\/(?!.*\/alley\/)/.test(e));
          });
      });
    }
    function Dt() {
      CasinoKubovich.rotate = function () {
        if (((CasinoKubovich.rotateInterval = null), !CasinoKubovich.mayRotate))
          return !1;
        CasinoKubovich.mayRotate = !1;
        var t = parseInt($("#fishki-balance-num").html().replace(",", "")),
          e = parseInt($("#push .fishki").text());
        if (!isNaN(e) && e > t) {
          CasinoKubovich.errorChip();
          return;
        }
        (CasinoKubovich.endPosition = null), (CasinoKubovich.result = null);
        var n = "";
        $("div.reel-yellow").length ? (n = "yellow") : (n = "black"),
          $.post(
            "/casino/kubovich/",
            { action: n },
            function (o) {
              if (((CasinoKubovich.result = o), CasinoKubovich.result))
                if (CasinoKubovich.result.success)
                  CasinoKubovich.showMessage(CasinoKubovich.result.text);
                else if (!CasinoKubovich.result.ready)
                  clearInterval(CasinoKubovich.rotateInterval),
                    (CasinoKubovich.rotateInterval = null),
                    (CasinoKubovich.mayRotate = !0),
                    $("#prizes").empty(),
                    $("#reel-turning").attr("class", ""),
                    $("#push .cost").html(" - \u0441\u043A\u043E\u0440\u043E"),
                    $("#push").addClass("disabled"),
                    $("#push-ellow").addClass("disabled"),
                    $("#steps tr.my").removeClass("my"),
                    $("#kubovich-smile").show(),
                    CasinoKubovich.showError(
                      "\u041A \u0441\u043E\u0436\u0430\u043B\u0435\u043D\u0438\u044E \u0432 \u0434\u0430\u043D\u043D\u044B\u0439 \u043C\u043E\u043C\u0435\u043D\u0442 \u041A\u0443\u0431\u043E\u0432\u0438\u0447 \u043E\u0442\u0434\u044B\u0445\u0430\u0435\u0442, \u043F\u0440\u0438\u0445\u043E\u0434\u0438\u0442\u0435 \u043F\u043E\u0437\u0436\u0435."
                    );
                else if (CasinoKubovich.result.reload) {
                  var r = !1;
                  $("div.reel-yellow").length && (r = !0),
                    CasinoKubovich.loadData(r);
                } else CasinoKubovich.errorChip();
              if (CasinoKubovich.result.wallet) {
                var a = {};
                (a.money = CasinoKubovich.result.wallet.money),
                  (a.ore = CasinoKubovich.result.wallet.ore),
                  (a.honey = CasinoKubovich.result.wallet.honey),
                  updateWallet(a);
              }
              (CasinoKubovich.rotateInterval = null),
                (CasinoKubovich.mayRotate = !0);
              var s = 0,
                c = 0;
              $("#kubovich-message button").unbind("click"),
                $("#kubovich-message button").bind("click", function () {
                  $("#kubovich-message").hide(),
                    $("#kubovich-message .data .text").html("");
                }),
                CasinoKubovich.nextStep();
            },
            "json"
          );
      };
    }
    function Gt() {
      (NeftLenin.attack = function () {
        $.post(
          "/neftlenin/",
          { ajax: 1, action: "startAction" },
          function (t) {
            t.result
              ? AngryAjax.reload()
              : (t.return_url && AngryAjax.goToUrl(t.return_url),
                t.error &&
                  showAlert(m.lang.LANG_MAIN_105, t.error, !0, "", ".welcome"));
          },
          "json"
        );
      }),
        (NeftLenin.viewPreMission = NeftLenin.viewPreMission2);
    }
    function zt() {
      (DungeonViewer.tryToGoToRoom = function (t) {
        if ($("#preview-map").hasClass("data-prevent-click")) {
          $("#preview-map").removeClass("data-prevent-click");
          return;
        }
        DungeonViewer.activePlayerMoving ||
          (Dungeon.isCanGoToRoom(t) &&
            Dungeon.goToRoom(t, function (e) {
              DungeonViewer.movePlayerToRoom(0, t, e);
            }));
      }),
        (Dungeon.goToRoom = function (t, e) {
          Dungeon.activeRequest ||
            ((Dungeon.activeRequest = !0),
            typeof t != "number" && (t = t.replace("room-", "")),
            postUrl(
              "/dungeon/gotoroom/",
              { action: "gotoroom", room: t },
              "post",
              function (n) {
                (Dungeon.activeRequest = !1),
                  DungeonViewer.initCooldown(n.cooldown),
                  (n.result || n.return_url) &&
                    AngryAjax.goToUrl(AngryAjax.getCurrentUrl());
              }
            ));
        });
    }
    function qn() {
      if (!$("#modify-many-container").length)
        try {
          $(".tattoo").css("height", "1000px"),
            $(".tattoo-slider").css("height", "700px"),
            $(".tattoo-slider-slides").css("height", "100%"),
            $(".tattoo-slider-slide__container").css("height", "100%");
          let t = A(
            '<div id="modify-many-container" style="display: flex; gap: 10px;"></div>'
          );
          [3, 20, 30].forEach((e) => {
            let n = k({
              text: `\u262F\uFE0F x${e}`,
              onClick: async () => await Rt(e),
              title: `\u041F\u043E\u043F\u0440\u043E\u0431\u043E\u0432\u0430\u0442\u044C \u0441\u0430\u043C\u043E\u043C\u0443 \u0445${e} \u0440\u0430\u0437`,
            });
            t.appendChild(n);
          }),
            $(".tattoo-draft-color-actions").append(t);
        } catch {
          console.log("could not redraw tattoo");
        }
    }
    function Pn() {
      let t = [
        "\u043F\u0435\u043B\u044C\u043C\u0435\u043D\u044C",
        "\u041A\u0443\u0431\u0438\u043A\u0438 \u041C\u043E\u0441\u043A\u043E\u0432\u043E\u043F\u043E\u043B\u0438\u0438",
        "\u042D\u043B\u0435\u043C\u0435\u043D\u0442 \u0441\u043B\u0443\u0447\u0430\u0439\u043D\u043E\u0439 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u0438",
        "\u0425\u0440\u0443\u0441\u0442\u044F\u0449\u0438\u0435 \u0432\u0430\u0444\u043B\u0438",
        "\u043F\u043E\u0434\u0437\u0435\u043C\u043A\u0443",
        "\u041D\u0430\u0431\u043E\u0440 \u043A\u043B\u044E\u0447\u0435\u0439",
        "\u0420\u0430\u0441\u043F\u044B\u043B\u0438\u0442\u0435\u043B\u044C \u0434\u043B\u044F \u0434\u0443\u0445\u043E\u0432",
      ];
      $(".tv-tower-news-tab-content").each(function () {
        let e = $(this),
          n = e.find(".tv-tower-news-article").toArray();
        n.sort((o, r) => {
          let a = $(o).find(".tv-tower-award").text().trim(),
            s = $(r).find(".tv-tower-award").text().trim(),
            c = t.some((p) => a.includes(p));
          return t.some((p) => s.includes(p)) - c;
        }),
          e.append(n);
      });
    }
    function Ce() {
      function t() {
        $("#welcome-rat button:nth-child(3)").replaceWith(
          $("#search_other_rat > div > div > div:nth-child(4)")
            .clone()
            .on("click", function () {
              $(document).one("ajaxStop", function () {
                t(), e();
              });
            })
        );
      }
      function e() {
        async function n() {
          await fetch("https://www.moswar.ru/metro/fight-rat/", {
            headers: {
              accept: "*/*",
              "content-type":
                "application/x-www-form-urlencoded; charset=UTF-8",
              "sec-fetch-dest": "empty",
              "sec-fetch-mode": "cors",
              "sec-fetch-site": "same-origin",
              "x-requested-with": "XMLHttpRequest",
            },
            referrer: "https://www.moswar.ru/metro/",
            referrerPolicy: "strict-origin-when-cross-origin",
            body: "__referrer=%2Fmetro%2F&return_url=%2Fmetro%2F",
            method: "POST",
            mode: "cors",
          });
        }
        $('button[onclick="metroFightRat();"]')
          .removeAttr("onclick")
          .off("click")
          .on("click", async function () {
            await n(),
              $(document).one("ajaxStop", async function () {
                Mn() && (await G());
              }),
              AngryAjax.goToUrl("/metro/");
          });
      }
      t(), e();
    }

      // ============= Проба исправить петарену

async function In() {
    if ($("#pets-table").length) return;

    // Скрываем оригинальный блок с питомцами
    $("#equipment-accordion").css({ display: "none" });

    let t = $(".inventary");

    // Очищаем ячейку перед добавлением нового контента
    let targetCell = t.find("tr:first td:nth-child(2)");
    targetCell.empty();

    // Загрузка и добавление контента из cage-relic (боевые питомцы)
    let e = await f("table", "https://www.moswar.ru/petarena/cage-relic/");
    console.log("Загрузка cage-relic:", e);

    if (e) {
        let $e = $(e);
        // Настраиваем боевых питомцев - расширяем вправо
        $e.find(".object-thumbs")
            .css({
                width: "150%", // Расширяем вправо
                maxWidth: "none",
                height: "400px",
                scrollbarWidth: "none",
                overflowY: "scroll",
                backgroundColor: "#f7b142" // Темно-оранжевый фон
            })
            .attr("id", "pets-table");

        // Добавляем кнопку "в бой" к новым элементам
        $e.find(".object-thumb").each((o, r) => {
            let a = $(r);
            a.css({ height: "auto" });
            let s = a.find(".action span:contains('\u043E\u0431\u0443\u0447\u0438\u0442\u044C')").parent();
            let c = s.attr("onclick")?.match(/\/(\d+)\//)?.[1];
            if (!c) return;
            $("<div>", {
                class: "take-pet action",
                html: "<span>\u0432 \u0431\u043E\u0439</span>",
                click: function () {
                    petarenaSetActive(c, "battle");
                },
            }).insertAfter(s);
        });

        targetCell.append($e);
    } else {
        console.log("Ошибка: cage-relic не загружен");
    }

    // Загрузка и добавление контента из cage (беговые питомцы)
    let n = await f("table", "https://www.moswar.ru/petarena/cage/");
    console.log("Загрузка cage:", n);

    if (n) {
        let $n = $(n);
        $n = $n.filter("table.inventary");
        // Настраиваем боевых - расширяем вправо
        $n.find(".object-thumbs")
            .css({
                width: "340px", // Расширяем вправо
                maxWidth: "none",
                height: "550px",
                scrollbarWidth: "none",
                overflowY: "scroll",
                backgroundColor: "#f7b142" // Темно-оранжевый фон
            });

        // Добавляем кнопку "в бой" к новым элементам
        $n.find(".object-thumb").each((o, r) => {
            let a = $(r);
            a.css({ height: "auto" });
            let s = a.find(".action span:contains('\u043E\u0431\u0443\u0447\u0438\u0442\u044C')").parent();
            let c = s.attr("onclick")?.match(/\/(\d+)\//)?.[1];
            if (!c) return;
            $("<div>", {
                class: "take-pet action",
                html: "<span>\u0432 \u0431\u043E\u0439</span>",
                click: function () {
                    petarenaSetActive(c, "battle");
                },
            }).insertAfter(s);
        });

        targetCell.append($n);
    } else {
        console.log("Ошибка: cage не загружен");
    }

    // Оптимизация таблицы .inventary
    t.find("tr").each(function () {
        let o = $(this).find("td"),
            r = o.eq(0).children().first(),
            a = o.eq(1).children().first();
        if (r.length) {
            // Настраиваем доступные питомцы и питомцев [1/2] - расширяем вправо
            if (r.find(".object-thumbs").length) {
                r.find(".object-thumbs").css({
                    width: "313.1px", // Расширяем вправо
                    maxWidth: "none",
                    height: "150px",
                    overflowY: "scroll",
                    backgroundColor: "#f7b142" // Темно-оранжевый фон
                });
            }
            // Если это блок "Питомцев [1/2]", тоже расширяем
            if (r.find("table").length || r.text().includes("Питомцев")) {
                r.css({
                    width: "317px", // Расширяем вправо
                    maxWidth: "none",
                    height: "150px",
                    overflow: "hidden",
                    backgroundColor: "#f7b142" // Темно-оранжевый фон
                });
            }
            t.find("tr:first td:first").append(r);
        }
        if (a.length) t.find("tr:first td:last").append(a);
        if (o.eq(0).is(":empty") && o.eq(1).is(":empty")) $(this).remove();
    });

    // Дополнительная настройка для блоков в левой колонке
    setTimeout(() => {
        // Сужаем "Доступные питомцы"
        t.find("tr:first td:first .object-thumbs").css({
            height: "120px",
            overflowY: "scroll"
        });

        // Сужаем любые другие высокие блоки в левой колонке
        t.find("tr:first td:first > div, tr:first td:first > table").each(function() {
            if ($(this).height() > 200) {
                $(this).css({
                    height: "150px",
                    overflow: "hidden"
                });
            }
        });
    }, 100);
}
      // =============== Конец петарены по идее ===========

    function Ln() {
      let t = ["/metro/", "/travel2/", "/neftlenin/from_battle/"],
        e = $(".result a.f").attr("href");
      e &&
        t.includes(e) &&
        (console.log("redirecting to", e), j(), AngryAjax.goToUrl(e));
    }
    function Mn() {
      if (location.pathname.match(/^(?!.*\/alley\/).*\/fight\//)) return !0;
    }
    function Un() {
      $(".object-thumbs").css({
        height: "auto",
        overflowY: "scroll",
        scrollbarWidth: "none",
      });
    }
    function Bn() {
      $("#home-collections").css({
        display: "grid",
        gridTemplateColumns: "1fr 1fr 1fr 1fr",
      }),
        $(".object-thumb").each(function () {
          $(this).css({ height: "auto" });
          let t = $(this).find("img").attr("title");
          /коллекция/i.test(t) && (t = t.replace(/коллекция/i, ""));
          let e = $("<span>")
            .text(t)
            .css({ "word-break": "break-all", "font-size": "smaller" });
          $(this).find("a").append(e);
        });
    }
    function mt() {
      let t = location.pathname;
      if ((ut(), Un(), t.match(/\/alley\/fight\//)))
        console.log("Alley fight"), fightForward();
      else if (t.match(/^(?!.*\/alley\/).*\/fight\//))
        console.log("Group fight"), Fe(), Ln();
      else if (t.includes("/player/")) dt();
      else if (t === "/automobile/ride/") Ut();
      else if (t === "/tattoo/") qn();
      else if (t === "/square/tvtower/") Pn();
      else if (t === "/metrowar/clan/") {
        let e = $(".clan-members > ul");
        $(".clan-members > ul li")
          .sort((n, o) => {
            let r = parseInt($(n).find(".cool-1").text().trim(), 10);
            return parseInt($(o).find(".cool-1").text().trim(), 10) - r;
          })
          .appendTo(e);
      } else if (t === "/home/relic/")
        $("#relic-reinforced-list").css({
          marginBottom: "0px",
          scrollbarWidth: "none",
        }),
          $(".relic-reinforced-wnd").css({ height: "auto" }),
          $(".relic-reinforced-wnd-list").css({ height: "100%" });
      else if (t === "/travel2/") _e();
      else if (t === "/metro/")
        Ce(),
          $(
            "#action-rat-fight > div.button-big.button, #timer-rat-fight > div:contains('\u041F\u0440\u043E\u043A\u0430\u0442\u0438\u0442\u044C\u0441\u044F')"
          ).on("click", function () {
            $(document).one("ajaxStop", Ce);
          });
      else if (t === "/petarena/") In();
      else if (t === "/home/") Bn();
      else if (t === "/camp/gypsy/") {
        let e = $(".game-types td:first");
        if (
          ($(".multi-play-gypsy").length ||
            e.append(
              at({
                label:
                  "\u041C\u043D\u0435 \u043F\u043E\u0432\u0435\u0437\u0435\u0442",
                action: async () => await rt(),
                className: "multi-play-gypsy",
              })
            ),
          $(".multi-play-gypsy-flowers").length)
        )
          return;
        let n = $(".game-types-col").first();
        console.log(n),
          n.append(
            at({
              label:
                "\u041C\u043D\u0435 \u043F\u043E\u0432\u0435\u0437\u0435\u0442",
              action: async () => await rt(),
              className: "multi-play-gypsy-flowers",
            })
          );
      } else if (t === "/casino/blackjack/") {
        if ($(".blackjack-multi").length) return;
        let e = at({
          label: "\u0418\u0433\u0440\u0430\u0442\u044C \u0437\u0430 10",
          action: async () => await ae(),
          className: "blackjack-multi",
        });
        $(".actions.bets").append(e);
      } else
        t === "/arbat/" &&
          (function () {
            if ($(".bringup-mode-btn").length) return;
            $(".progress .num").html(function (r, a) {
              return a.replace(/Баллов набрано:\s*/, "");
            });
            let n = k({
                text: "\u{1F695}",
                title:
                  "\u0411\u043E\u043C\u0431\u0438\u0442\u044C \u0431\u0435\u0441\u043F\u043B\u0430\u0442\u043D\u043E (\u043F\u043E\u043A\u0430 \u0432\u043A\u043B\u0430\u0434\u043A\u0430 \u043D\u0435 \u0437\u0430\u043A\u0440\u044B\u0442\u0430 \u0438\u043B\u0438 \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0430)",
                className: "bringup-mode",
                onClick: async () => {
                  if (window.BRINGUP_MODE) {
                    showAlert(
                      "\u0411\u043E\u043C\u0431\u0438\u043B\u0430 \u{1F695}",
                      "\u0420\u0435\u0436\u0438\u043C \u0431\u043E\u043C\u0431\u0438\u0442\u044C \u0443\u0436\u0435 \u0430\u043A\u0442\u0438\u0432\u0435\u043D."
                    );
                    return;
                  }
                  let r = $(
                    'form[action="/automobile/bringup/"] input[name="car"]'
                  ).val();
                  if (!r) {
                    showAlert(
                      "\u0411\u043E\u043C\u0431\u0438\u043B\u0430 \u{1F695}",
                      "\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043D\u0430\u0439\u0442\u0438 ID \u0430\u0432\u0442\u043E\u043C\u043E\u0431\u0438\u043B\u044F."
                    );
                    return;
                  }
                  await B(r),
                    (window.BRINGUP_MODE = !0),
                    AngryAjax.reload(),
                    showAlert(
                      "\u0411\u043E\u043C\u0431\u0438\u043B\u0430 \u{1F695}",
                      `<div id="alert-text" style="display: flex;justify-items: center;align-items: flex-end;gap: 8px;
"><img src="/@/images/link/taxi.jpg" style="width: 48px;"> <span>\u0420\u0435\u0436\u0438\u043C \u0431\u043E\u043C\u0431\u0438\u0442\u044C \u0431\u0435\u0441\u043F\u043B\u0430\u0442\u043D\u043E.<br> \u0427\u0442\u043E\u0431\u044B \u043E\u0442\u043A\u043B\u044E\u0447\u0438\u0442\u044C, \u043E\u0431\u043D\u043E\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443.<br> <i>(id \u0442\u0430\u0447\u043A\u0438: ${r})</i>.</span></div>`
                    );
                },
              }),
              o = $(".auto-bombila .actions");
            o.find("form").css({ display: "inline-block" }), o.append(n);
          })();
    }
